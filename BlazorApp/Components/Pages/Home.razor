@page "/"
@rendermode InteractiveServer


<h3>Pöördumised (Kokku: @todos.Count(todo => !todo.IsDone))</h3>

<div class="container">



    <div class="row">
        <div class="col">
            <input type="text" class="form-control" placeholder="Kirjelda pöördumist" @bind="newTodo" @onkeyup="HandleKeyUp">
        </div>
        <div class="col">
            <InputDate @bind-Value="deadLineDate" />
            <input type="time" @bind=deadLineTime />
            <button class="btn btn-outline-secondary" @onclick="AddTodo">Lisa</button>
        </div>
        
    </div>


    <ul class="list-group list-group-flush">
        <div class="container text-center">
            <div class="row align-items-center">
                <div class="col-6">
                    Kirjeldus
                </div>
                <div class="col-2">
                    Loomiskuupäev
                </div>
                <div class="col-2">
                    Tähtaeg
                </div>
            </div>
        </div>
        @foreach (var todo in sort(todos))
        {
            @if (todo.IsDone == false)
            {
                @if (todo.Deadline <= DateTime.Now.AddHours(1))
            {
                    <div class="text-justify">
                        <div class="row align-items-center">
                            <div class="col-6">
                                <li class="list-group-item list-group-item-danger">
                                    
                                        <input type="checkbox" @bind="todo.IsDone" />
                                        @todo.Title
                                    
                                </li>           
                            </div>
                            <div class="col-2">
                                <p class="text-justify">
                                   
                                    @todo.TimeCreated
                                </p>
                            </div>
                            <div class="col-2">
                                <p class="text-justify">
                                    
                                    @todo.Deadline
                                </p>
                            </div>
                        </div>
                    </div>
                }
                else
                {
            <div class="text-justify">
                <div class="row align-items-center">
                    <div class="col-6">
                        <li class="list-group-item list-group-item-success">
                          
                                <input type="checkbox" @bind="todo.IsDone" />
                                        @todo.Title
                           
                        </li>
                    </div>
                    <div class="col-2">
                        <p class="text-justify">

                                    @todo.TimeCreated
                        </p>
                    </div>
                    <div class="col-2">
                        <p class="text-justify">

                                    @todo.Deadline
                        </p>
                    </div>
                </div>
            </div>
                }

            }

        }

    </ul>

    

</div>






@code {
    private List<TodoItem> todos = new();
    string newTodo = "";
    DateTime deadLineDate = DateTime.Now;
    DateTime deadLineTime = DateTime.Now;

    public void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo, 
                                    TimeCreated = DateTime.Now, 
                                    Deadline = new DateTime(deadLineDate.Year,deadLineDate.Month,deadLineDate.Day,deadLineTime.Hour,deadLineTime.Minute,0) });
            newTodo = string.Empty;
        }
    }

    private void HandleKeyUp(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            AddTodo();
        }
    }
    //sorteerib ToDoItem listi kasutades Deadline.CompareTo meetodit
    public List<TodoItem> sort(List<TodoItem> todos)
    {
        todos.Sort((b, a) => a.Deadline.CompareTo(b.Deadline));
        return todos;
    }

}
