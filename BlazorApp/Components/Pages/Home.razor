@page "/"
@rendermode InteractiveServer
@using Components
@using System

<h3>Todo (@todos.Count(todo => !todo.IsDone))</h3>

<div class="container">
    <ul class="list-group">
        @foreach (var todo in sort(todos))
        {
            @if (todo.IsDone == false)
            {
                @if (todo.Deadline <= DateTime.Now.AddHours(1))
            {
                    <li class="list-group-item list-group-item-danger">
                        <p class="text-justify">
                            <input type="checkbox" @bind="todo.IsDone" />
                            @todo.Title @todo.Deadline
                        </p>
                    </li>
                }
                else
                {
                    <li class="list-group-item list-group-item-success">
                        <p class="text-justify">
                            <input type="checkbox" @bind="todo.IsDone" />
                            @todo.Title @todo.Deadline
                        </p>
                    </li>
                }

            }

        }

    </ul>

    <input @bind="newTodo" @onkeyup="HandleKeyUp" />
    <InputDate @bind-Value="deadLineDate" />
    <input type="time" @bind=deadLineTime/>
    

    <button @onclick="AddTodo">Add todo</button>

</div>






@code {
    private List<TodoItem> todos = new();
    string newTodo = "";
    DateTime deadLineDate = new();
    DateTime deadLineTime = new ();

    public void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo, 
                                    TimeCreated = DateTime.Now, 
                                    Deadline = new DateTime(deadLineDate.Year,deadLineDate.Month,deadLineDate.Day,deadLineTime.Hour,deadLineTime.Minute,0) });
            newTodo = string.Empty;
        }
    }

    private void HandleKeyUp(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            AddTodo();
        }
    }
    //sorteerib ToDoItem listi kasutades Deadline.CompareTo meetodit
    public List<TodoItem> sort(List<TodoItem> todos)
    {
        todos.Sort((b, a) => a.Deadline.CompareTo(b.Deadline));
        return todos;
    }

}
